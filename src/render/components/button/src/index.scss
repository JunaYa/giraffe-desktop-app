@use "sass:map";

@import '../../common/theme.scss';

$primary: #ff7025;
$primary-light: #f8b639;
$primary-dark: #ff4c00;

$white: #fff;
$grey-1: #e0e5ec;
$grey-2: #c3c1c6;
$grey-3: #b1b1b1;
$grey-5: #9baacf;
$grey-fade-1: fade_out($grey-1, 0.1);
$grey-fade-2: fade_out($grey-2, 0.1);

$background: $grey-1;
$standard-transition: 260ms;

/* === SHADOWS === */
@function outset-shadow($darker-color: $grey-fade-2, $lighter-color: $white) {
  @return 0.3em 0.3em 0.5em $darker-color, -0.2em -0.2em 0.4em $lighter-color;
}

@function sunken-shadow($darker-color: $grey-fade-2, $lighter-color: $white) {
  @return -0.3em -0.3em 0.5em $darker-color, 0.2em 0.2em 0.4em $lighter-color;
}

@function inset-shadow($darker-color: $grey-fade-2, $lighter-color: $white) {
  @return inset 0.2em 0.2em 0.5em $darker-color,
    inset -0.2em -0.2em 0.5em $lighter-color;
}

@function raised-shadow($darker-color: $grey-fade-2, $lighter-color: $white) {
  @return inset-shadow($lighter-color, $darker-color), outset-shadow();
}

@function ridge-shadow($darker-color: $grey-fade-2, $lighter-color: $white) {
  @return inset-shadow($darker-color, $lighter-color), outset-shadow();
}

$--button-padding: () !default;
$--button-padding: map.merge(
  (
    'large': 11px 22px,
    'medium': 10px 20px,
    'small': 9px 15px,
    'tiny': 6px 10px,
  ),
  $--button-padding
);

$--button-font-size: () !default;
$--button-font-size: map.merge(
  (
    'large': 16px,
    'medium': 14px,
    'small': 13px,
    'tiny': 12px,
  ),
  $--button-font-size
);

$--button-border-radius: () !default;
$--button-border-radius: map.merge(
  (
    'large': 5px,
    'medium': 4px,
    'small': 3px,
    'tiny': 2px,
  ),
  $--button-border-radius
);

:host {
  display: inline-block;
}

:host([block]) {
  display: block;
}

.g-button {
  max-width: 100%;
  margin: 8px;
  padding: 0.5em 1.2em;
  font-size: 1em;
  text-align: center;
  text-decoration: none;
  background: none;
  border: 1px solid #5e6167;
  border-radius: 4px;
  outline: none;
  cursor: pointer;
  transition: all $standard-transition ease;

  @each $size in $--sizes {
    &--size-#{$size} {
      padding: map.get($--button-padding, $size);
      font-size: map.get($--button-font-size, $size);
      border-radius: map.get($--button-border-radius, $size);
    }
  }

  @each $type in $--types {
    &--type-#{$type} {
      color: #fff;
      background-color: var(--g-#{$type}, map.get($--colors, $type, 'base'));
      border-color: var(--g-#{$type}, map.get($--colors, $type, 'base'));

      &:disabled,
      &:disabled:hover {
        background-color:
          var(
            --g-#{$type}-fade-lot,
            map.get($--colors, $type, 'fade-lot')
          );
      }
    }
    &--type-#{$type}:hover {
      color: #fff;
      background-color:
        var(
          --g-#{$type}-fade-little,
          map.get($--colors, $type, 'fade-little')
        );
      border-color:
        var(
          --g-#{$type}-fade-little,
          map.get($--colors, $type, 'fade-little')
        );
    }
    &--type-#{$type}:active {
      color: #fff;
      background-color:
        var(
          --g-#{$type}-active,
          map.get($--colors, $type, 'active')
        );
      border-color:
        var(
          --g-#{$type}-active,
          map.get($--colors, $type, 'active')
        );
    }
    &--type-#{$type}.is-plain {
      color: var(--g-#{$type}, map.get($--colors, $type, 'base'));
      background-color:
        var(
          --g-#{$type}-fade-lot,
          map.get($--colors, $type, 'fade-lot')
        );
      border-color:
        var(
          --g-#{$type}-fade-some,
          map.get($--colors, $type, 'fade-some')
        );
    }
  }

  &--shadow {
    &-raised {
      border: none;
      box-shadow: raised-shadow();

      &:active {
        box-shadow: inset-shadow();
      }
    }

    &-pill {
      border: none;
      box-shadow: outset-shadow();

      &:active {
        box-shadow: inset-shadow();
      }
    }

    &-primary {
      color: $grey-1;
      background: $primary;
      border: none;
      box-shadow: raised-shadow($primary-dark, $primary-light);

      &:active {
        box-shadow: inset-shadow($primary-dark, $primary-light);
      }

      &:hover,
      &:focus {
        color: $white;
      }
    }
  }

  &--shape {
    &-round {
      border-radius: 50%;
    }

    &-square {
      border-radius: 4px;
    }
  }

  &--pin {
    min-width: 2em;
    max-width: 2em;
    min-height: 2em;
    max-height: 2em;
    padding: 0;
  }

  &--disabled {
    cursor: ng-drop;
  }
}
